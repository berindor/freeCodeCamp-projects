const banknotes = {
  "PENNY": 1,
  "NICKEL": 5,
  "DIME": 10,
  "QUARTER": 25,
  "ONE": 100, 
  "FIVE": 500,
  "TEN": 1000, 
  "TWENTY": 2000, 
  "ONE HUNDRED": 10000
}

function checkCashRegister(price, cash, cid) {
  // Need to multiply by 100 because floating numbers cause problems. 
  // Hence every step use pennies, this is cidP.
  let cidP = cid.map( subArr => [subArr[0], subArr[1] * 1000 / 10]);
  let remains = cash * 100 - price * 100;
  let sum = 0; 
  cidP.forEach( ([banknote, amount]) => { sum += amount; });
  if (remains === sum) { 
    return {status: "CLOSED", change: [...cid]};
  } 
  if (remains > sum) {
    return {status: "INSUFFICIENT_FUNDS", change: []};
  } 
  let changeP = [];
  cidP.map((item, idx, array) => array[array.length - 1 - idx])
  .forEach(([banknote,amount]) => { 
      changeP.push([banknote, Math.min(amount, remains - (remains % banknotes[banknote]))]);
      remains -= Math.min(amount, remains - (remains % banknotes[banknote]));
    }
  ) 
  if (remains === 0) {
    return{status: "OPEN", change: changeP
    .filter(([banknote, amount]) => amount > 0)
    .map(([banknote, amount]) => [banknote, amount / 100])};
  }
// If the above algorithm does not find the correct change because of the amount of QUARTERs, reducing cidP by 1 quarter will solve the problem.
  remains = cash * 100 - price * 100;
  changeP = [];
  cidP[3][1] -= 25;
  cidP.map((item, idx, array) => array[array.length - 1 - idx])
  .forEach(([banknote,amount]) => { 
      changeP.push([banknote, Math.min(amount, remains - (remains % banknotes[banknote]))]);
      remains -= Math.min(amount, remains - (remains % banknotes[banknote]));
    }
  ) 
  if (remains === 0) {
    return{status: "OPEN", change: changeP
    .filter(([banknote, amount]) => amount > 0)
    .map(([banknote, amount]) => [banknote, amount / 100])};
  // új végződik
  } else {
    return {status: "INSUFFICIENT_FUNDS", change: []};
  }
} 

//Okay, it passes all the tests, but does not work for e.g. this setup: 
//console.log(checkCashRegister(19.7, 20, [["PENNY", 0.02], ["NICKEL", 0], ["DIME", 3.1], ["QUARTER", 0.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]))

console.log(checkCashRegister(19.7, 20, [["PENNY", 0.02], ["NICKEL", 0], ["DIME", 0.1], ["QUARTER", 0.25], ["ONE", 90], ["FIVE", 55], ["TEN", 20], ["TWENTY", 60], ["ONE HUNDRED", 100]]));

